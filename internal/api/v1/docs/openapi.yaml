openapi: 3.0.0
info:
  title: Web Cache API
  version: "1.0"
  description: API for managing web cache keys
paths:
  /api/v1/caches:
    get:
      summary: List all caches
      description: Returns a list of currently registered cache names.
      tags: [caches]
      responses:
        "200":
          description: List of cache names
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
    post:
      summary: Create a new cache
      description: Creates a new named cache. Optionally accepts expiration (not yet implemented).
      tags: [caches]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateCacheRequest'
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                type: string
        "400":
          description: Invalid request or bad payload
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /api/v1/caches/{name}:
    delete:
      summary: Delete a cache
      description: Deletes a cache with the specified name.
      tags: [caches]
      parameters:
        - name: name
          in: path
          required: true
          schema:
            type: string
          description: Name of the cache to delete
      responses:
        "204":
          description: No Content
        "400":
          description: Invalid cache name
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "404":
          description: Cache not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      summary: Update cache expiration
      description: Updates the expiration time of a named cache. If no TTL is provided, it removes the expiration.
      tags: [caches]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateCacheRequest'
      responses:
        "204":
          description: No Content
        "400":
          description: Invalid request or bad payload
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /api/v1/keys:
    post:
      summary: Create cache entries
      description: Creates one or more keys in the cache with values
      tags: [keys]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateKeysRequest'
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                type: string
        "400":
          description: Bad request – invalid JSON or failed validation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "409":
          description: Conflict – cache key already exists
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      summary: Replace multiple values
      description: Replaces multiple entries in the cache
      tags: [keys]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReplaceBatchRequest'
      responses:
        "200":
          description: Values replaced successfully
          content:
            application/json:
              schema:
                type: string
        "400":
          description: Invalid request body
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /api/v1/keys/{key}:
    get:
      summary: Get a single value
      description: Retrieves the value associated with a single cache key
      tags: [keys]
      parameters:
        - name: key
          in: path
          required: true
          schema:
            type: string
          description: Key to retrieve
      responses:
        "200":
          description: Value for the given key
          content:
            application/json:
              schema: {}
        "404":
          description: Key not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      summary: Replace a single value
      description: Replaces the value of a key in the cache
      tags: [keys]
      parameters:
        - name: key
          in: path
          required: true
          schema:
            type: string
          description: Key to update
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HandlePutRequest'
      responses:
        "200":
          description: Value replaced successfully
          content:
            application/json:
              schema:
                type: string
        "400":
          description: Invalid request body
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      summary: Delete a single key
      description: Deletes a single key from the specified cache
      tags: [keys]
      parameters:
        - name: key
          in: path
          required: true
          schema:
            type: string
          description: Key to delete
      responses:
        "200":
          description: Key deleted successfully
          content:
            application/json:
              schema:
                type: string
        "500":
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /api/v1/keys/delete:
    post:
      summary: Delete multiple keys
      description: Deletes multiple keys from the specified cache
      tags: [keys]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteBatchRequest'
      responses:
        "200":
          description: Keys deleted successfully
          content:
            application/json:
              schema:
                type: string
        "400":
          description: Invalid request body
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "500":
          description: Server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /api/v1/keys/get:
    post:
      summary: Get multiple values
      description: Retrieves values for a list of cache keys
      tags: [keys]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetBatchRequest'
      responses:
        "200":
          description: Map of keys to values
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  type: string
        "400":
          description: Invalid request body
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        "404":
          description: One or more keys not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

components:
  schemas:
    CreateCacheRequest:
      type: object
      properties:
        name:
          type: string
          description: Name of the cache to create
        ttl:
          type: integer
          description: TTL for the cache in seconds

    CreateKeysRequest:
      type: object
      properties:
        entries:
          type: object
          additionalProperties: {}
        ttl:
          type: object
          additionalProperties:
            type: integer

    DeleteBatchRequest:
      type: object
      properties:
        keys:
          type: array
          items:
            type: string
          description: List of keys to delete

    ErrorResponse:
      type: object
      properties:
        message:
          type: string
          description: A human-readable message or structured error detail

    GetBatchRequest:
      type: object
      properties:
        keys:
          type: array
          items:
            type: string
          description: List of keys to retrieve

    HandlePutRequest:
      type: object
      properties:
        value:
          type: string
          description: New value to store for the key

    ReplaceBatchRequest:
      type: object
      properties:
        entries:
          type: object
          additionalProperties: {}
          description: Map of keys to their new values
        ttl:
          type: object
          additionalProperties:
            type: integer
          description: Map of keys to their new TTLs (in seconds)

    UpdateCacheRequest:
      type: object
      properties:
        ttl:
          type: integer
          description: TTL for the cache in seconds
