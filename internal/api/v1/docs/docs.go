// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/caches": {
            "get": {
                "description": "Returns a list of currently registered cache names.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "caches"
                ],
                "summary": "List all caches",
                "responses": {
                    "200": {
                        "description": "List of cache names",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "Creates a new named cache. Optionally accepts expiration (not yet implemented).",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "caches"
                ],
                "summary": "Create a new cache",
                "parameters": [
                    {
                        "description": "Cache creation payload",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CreateCacheRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Invalid request or bad payload",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/caches/{name}": {
            "put": {
                "description": "Updates the expiration time of a named cache. If no TTL is provided, it removes the expiration.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "caches"
                ],
                "summary": "Update cache expiration",
                "parameters": [
                    {
                        "description": "Cache update payload",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/UpdateCacheRequest"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Invalid request or bad payload",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Deletes a cache with the specified name.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "caches"
                ],
                "summary": "Delete a cache",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Name of the cache to delete",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Invalid cache name",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Cache not found",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/keys": {
            "put": {
                "description": "Replaces multiple entries in the cache",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "keys"
                ],
                "summary": "Replace multiple values",
                "parameters": [
                    {
                        "description": "Map of key-value pairs to replace",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ReplaceBatchRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Values replaced successfully",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Invalid request body",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Creates one or more keys in the cache with values",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "keys"
                ],
                "summary": "Create cache entries",
                "parameters": [
                    {
                        "description": "Request body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CreateKeysRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad request – invalid JSON or failed validation",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "409": {
                        "description": "Conflict – cache key already exists",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/keys/delete": {
            "post": {
                "description": "Deletes multiple keys from the specified cache",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "keys"
                ],
                "summary": "Delete multiple keys",
                "parameters": [
                    {
                        "description": "List of keys to delete",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/DeleteBatchRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Keys deleted successfully",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Invalid request body",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/keys/get": {
            "post": {
                "description": "Retrieves values for a list of cache keys",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "keys"
                ],
                "summary": "Get multiple values",
                "parameters": [
                    {
                        "description": "List of keys to retrieve",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/GetBatchRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Map of keys to values",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Invalid request body",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "One or more keys not found",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        },
        "/keys/{key}": {
            "get": {
                "description": "Retrieves the value associated with a single cache key",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "keys"
                ],
                "summary": "Get a single value",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Key to retrieve",
                        "name": "key",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Value for the given key",
                        "schema": {}
                    },
                    "404": {
                        "description": "Key not found",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "description": "Replaces the value of a key in the cache",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "keys"
                ],
                "summary": "Replace a single value",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Key to update",
                        "name": "key",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "New value for the key",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/HandlePutRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Value replaced successfully",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Invalid request body",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Deletes a single key from the specified cache",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "keys"
                ],
                "summary": "Delete a single key",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Key to delete",
                        "name": "key",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Key deleted successfully",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "schema": {
                            "$ref": "#/definitions/ErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "CreateCacheRequest": {
            "type": "object",
            "properties": {
                "name": {
                    "description": "Name of the cache to create\nrequired: true",
                    "type": "string"
                },
                "ttl": {
                    "description": "TTL for the cache in seconds",
                    "type": "integer"
                }
            }
        },
        "CreateKeysRequest": {
            "type": "object",
            "properties": {
                "entries": {
                    "type": "object",
                    "additionalProperties": {}
                },
                "ttl": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "integer"
                    }
                }
            }
        },
        "DeleteBatchRequest": {
            "type": "object",
            "properties": {
                "keys": {
                    "description": "List of keys to delete\nrequired: true",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "ErrorResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "description": "A human-readable message or structured error detail"
                }
            }
        },
        "GetBatchRequest": {
            "type": "object",
            "properties": {
                "keys": {
                    "description": "List of keys to retrieve\nrequired: true",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "HandlePutRequest": {
            "type": "object",
            "properties": {
                "value": {
                    "description": "New value to store for the key\nrequired: true"
                }
            }
        },
        "ReplaceBatchRequest": {
            "type": "object",
            "properties": {
                "entries": {
                    "description": "Map of keys to their new values\nrequired: true",
                    "type": "object",
                    "additionalProperties": {}
                },
                "ttl": {
                    "description": "Map of keys to their new TTLs (in seconds)\nrequired: false",
                    "type": "object",
                    "additionalProperties": {
                        "type": "integer"
                    }
                }
            }
        },
        "UpdateCacheRequest": {
            "type": "object",
            "properties": {
                "ttl": {
                    "description": "TTL for the cache in seconds\nrequired: true",
                    "type": "integer"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "",
	BasePath:         "/api/v1",
	Schemes:          []string{},
	Title:            "Web Cache API",
	Description:      "API for managing web cache keys",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
